{"version":3,"file":"static/js/main.chunk.js","sources":["/home/wasif/projects/pongo/client/src/App.jsx","/home/wasif/projects/pongo/client/src/Components/Actions/index.jsx","/home/wasif/projects/pongo/client/src/Components/Collection/index.jsx","/home/wasif/projects/pongo/client/src/Components/Collections/index.jsx","/home/wasif/projects/pongo/client/src/Components/Connection/index.jsx","/home/wasif/projects/pongo/client/src/Components/DocumentRoot/index.jsx","/home/wasif/projects/pongo/client/src/Components/DocumentTree/index.jsx","/home/wasif/projects/pongo/client/src/Components/Main/index.jsx","/home/wasif/projects/pongo/client/src/Components/Nav/index.jsx","/home/wasif/projects/pongo/client/src/Components/Pagination/index.jsx","/home/wasif/projects/pongo/client/src/Components/Query/index.jsx","/home/wasif/projects/pongo/client/src/Components/Records/index.jsx","/home/wasif/projects/pongo/client/src/Middlewares/SocketMiddleware.js","/home/wasif/projects/pongo/client/src/Reducers/Connection.js","/home/wasif/projects/pongo/client/src/Reducers/index.js","/home/wasif/projects/pongo/client/src/Store.js","/home/wasif/projects/pongo/client/src/index.js","/home/wasif/projects/pongo/client/ignored /home/wasif/projects/pongo/client/node_modules/engine.io-client/lib/transports ws"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n    HashRouter as Router,\n    Route,\n    Switch\n} from \"react-router-dom\";\nimport Main from 'Components/Main';\nimport Connection from 'Components/Connection';\n\nclass App extends Component {\n\n  render() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact component={Main} />\n                <Route path=\"/connect\" exact component={Connection} />\n            </Switch>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport {\n    Col,\n    ButtonGroup,\n    Button,\n} from 'react-bootstrap';\n\nclass Actions extends Component {\n  render() {\n    return (  \n        <Col>\n        <ButtonGroup>\n            <Button>Insert</Button>\n            <Button>Update</Button>\n            <Button>Delete</Button>\n        </ButtonGroup>\n        </Col>\n    )\n  }\n}\n\nexport default Actions","import React, { Component, Fragment } from 'react'\nimport Query from 'Components/Query';\nimport Pagination from 'Components/Pagination';\nimport Records from 'Components/Records';\n\nclass Collection extends Component {\n  render() {\n    return (\n      <Fragment>\n          <Query />\n          <Pagination />\n          <Records />\n      </Fragment>\n    )\n  }\n}\n\nexport default Collection","import React, { Component } from 'react';\nimport {\n    ListGroup as Group\n} from 'react-bootstrap';\n\nclass Collections extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            collections: [{\n                id: 1,\n                name: 'MoveIn4Person-Person'\n            }, {\n                id: 2,\n                name: 'MoveIn4Course-Course'\n            }]\n        }\n    }\n\n    render() {\n\n        const { collections } = this.state\n        const { Item } = Group\n\n        return (\n            <Group as=\"ul\">\n                {collections.map(({id, name}) => {\n                    return <Item\n                        as=\"li\" \n                        key={id}\n                        variant=\"dark\"\n                    >\n                    {name}\n                    </Item>\n                })}\n            </Group>\n        )\n    }\n}\n export default Collections","import React, { Component } from 'react';\nimport {\n    Row,\n    Col,\n    Button\n} from 'react-bootstrap';\nimport {\n    Dialog,\n    Header,\n    Title,\n    Body,\n    Footer\n} from 'react-bootstrap/Modal';\n\nimport {\n    Group,\n    Label,\n    Control\n} from 'react-bootstrap/Form';\n\nclass Connection extends Component\n{\n    render() {\n        return (\n            <Dialog centered>\n                <Header>\n                    <Title>Connect</Title>\n                </Header>\n                <Body>\n\n                    <Group as={Row}>\n                        <Col sm={3}>\n                            <Label>Host</Label>\n                        </Col>\n                        <Col sm={9}>\n                            <Control name=\"host\" />\n                        </Col>\n                    </Group>\n\n                    <Group as={Row}>\n                        <Col sm={3}>\n                            <Label>User Name</Label>\n                        </Col>\n                        <Col sm={9}>\n                            <Control name=\"username\" />\n                        </Col>\n                    </Group>\n\n                    <Group as={Row}>\n                        <Col sm={3}>\n                            <Label>Password</Label>\n                        </Col>\n                        <Col sm={9}>\n                            <Control name=\"password\" type=\"password\" />\n                        </Col>\n                    </Group>\n\n                    <Group as={Row}>\n                        <Col sm={3}>\n                            <Label>Database Name</Label>\n                        </Col>\n                        <Col sm={9}>\n                            <Control name=\"dbname\" />\n                        </Col>\n                    </Group>\n\n                    <Group as={Row}>\n                        <Col sm={3}>\n                            <Label>Port</Label>\n                        </Col>\n                        <Col sm={9}>\n                            <Control name=\"port\" />\n                        </Col>\n                    </Group>\n                </Body>\n\n                <Footer>\n                    <Button variant=\"primary\">Connect</Button>\n                </Footer>\n            </Dialog>\n        )\n    }\n}\n\nexport default Connection","import React, { useState } from 'react';\n\nconst DocumentRoot = ({ document }) => {\n    const [expand, setExpand] = useState(false)\n\n    const toggle = () => {\n        setExpand(!expand)\n    }\n\n    if (!expand) {\n        return (\n            <li>\n                <span onClick={toggle}>+</span>\n                <span>{'_id : ' + document._id}</span>\n            </li>\n        )\n    }\n\n    if (expand) {\n        return (\n            <li>\n                <span onClick={toggle}>-</span>\n            </li>\n        )\n    }\n}\n\nexport default DocumentRoot","import React from 'react';\nimport DocumentRoot from 'Components/DocumentRoot'\n\nconst DocumentTree = (props) => {\n\n    const { documents } = props;\n\n    return (\n        <ul>\n            {documents.map((document) => {\n                return <DocumentRoot\n                    key={document._id}\n                    document={document}\n                ></DocumentRoot>\n            })}\n        </ul>\n    )\n}\n\nexport default DocumentTree","import React, { Component, Fragment } from 'react';\nimport Collections from 'Components/Collections';\nimport Collection from 'Components/Collection';\nimport Nav from 'Components/Nav';\nimport {\n    Row,\n    Col\n} from 'react-bootstrap';\n\nclass Main extends Component\n{\n    render() {\n        return (\n            <Fragment>\n                <Row>\n                    <Col>\n                        <Nav />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={3}>\n                        <Collections />\n                    </Col>\n                    <Col md={9}>\n                        <Collection />\n                    </Col>\n                </Row>\n            </Fragment>\n        )\n    }\n}\n\nexport default Main","import React, { Component } from 'react'\nimport Navbar, {\n    Brand\n} from 'react-bootstrap/Navbar';\n\n\nclass Nav extends Component {\n  render() {\n    return (\n      <Navbar>\n        <Brand href=\"/\">Pongo</Brand>\n      </Navbar>\n    )\n  }\n}\nexport default Nav","import React, { Component } from 'react'\nimport Actions from 'Components/Actions';\nimport {\n    Row,\n    Col,\n    ButtonGroup,\n    Button,\n    FormControl\n} from 'react-bootstrap';\n\nclass Pagination extends Component {\n  render() {\n    return (\n      <Row>\n          <Col>\n            <ButtonGroup>\n                <Button>&lt;&lt;</Button>\n                <Button>&lt;</Button>\n                <FormControl type=\"text\" value=\"0 \" size=\"sm\" />\n                <Button>&gt;</Button>\n                <Button>&gt;&gt;</Button>\n            </ButtonGroup>\n          </Col>\n          <Actions />\n      </Row>\n    )\n  }\n}\n\nexport default Pagination","import React, { Component, Fragment } from 'react'\nimport {\n    Row,\n    Col\n} from 'react-bootstrap';\nimport {\n    Group,\n    Label,\n    Control\n} from 'react-bootstrap/Form';\nimport { Button } from 'react-bootstrap';\n\nclass Query extends Component {\n  render() {\n    return (\n      <Fragment>\n          <Group as={Row}>\n            <Col md={2}>\n                <Label>Filters</Label>\n            </Col>\n            <Col md={8}>\n                <Control name=\"filters\" value=\"{}\" />\n            </Col>\n            <Col md={2}>\n                <Button variant=\"secondary\">Referesh</Button>\n            </Col>\n          </Group>\n\n          <Group as={Row}>\n            <Col md={2}>\n                <Label>Projection</Label>\n            </Col>\n            <Col md={4}>\n                <Control name=\"projection\" value=\"{}\" />\n            </Col>\n            <Col md={2}>\n                <Label>Sort</Label>\n            </Col>\n            <Col md={4}>\n                <Control name=\"sort\" value=\"{}\" />\n            </Col>\n          </Group>\n\n          <Group as={Row}>\n            <Col md={2}>\n                <Label>Skip</Label>\n            </Col>\n            <Col md={4}>\n                <Control name=\"skip\" value=\"\" />\n            </Col>\n            <Col md={2}>\n                <Label>Limit</Label>\n            </Col>\n            <Col md={4}>\n                <Control name=\"limit\" value=\"\" />\n            </Col>\n          </Group>\n      </Fragment>\n    )\n  }\n}\n\nexport default Query","import React, { Component } from 'react';\nimport {\n    Row,\n    Col\n} from 'react-bootstrap';\nimport DocumentTree from 'Components/DocumentTree';\n\nclass Records extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            documents: [{\n                _id: ObjectId(\"5099803df3f4948bd2f98391\"),\n                name: { first: \"Alan\", last: \"Turing\" },\n                birth: new Date('Jun 23, 1912'),\n                death: new Date('Jun 07, 1954'),\n                contribs: [ \"Turing machine\", \"Turing test\", \"Turingery\" ],\n                views : NumberLong(1250000)\n            }]\n        }\n\n    }\n\n  render() {\n    return (\n      <Row>\n          <Col>\n            <DocumentTree documents={this.state.documents} />\n          </Col>\n      </Row>\n    )\n  }\n}\n\nexport default Records","import io from 'socket.io-client';\n\nexport default function SocketMiddleware() {\n    const socket = io();\n\n    return ({ dispatch }) => next => (action) => {\n        if (typeof action === 'function') {\n            return next(action);\n        }\n\n        const {\n            event,\n            leave,\n            handle,\n            ...rest\n        } = action;\n\n        if (!event) {\n            return next(action);\n        }\n\n        if (leave) {\n            socket.removeListener(event);\n        }\n\n        let handleEvent = handle;\n        if (typeof handleEvent === 'string') {\n            handleEvent = result => dispatch({ type: handle, result, ...rest });\n        }\n        return socket.on(event, handleEvent);\n    };\n}","let initState = {\n    host: '',\n    user: '',\n    pass: '',\n    port: '',\n    dbname: ''\n};\n\nexport default function(state = initState, action) {\n    return {...state}\n}","import { combineReducers } from 'redux';\nimport connection from './Connection';\n\nexport default combineReducers({\n    connection: connection\n})","import {\n  configureStore,\n  getDefaultMiddleware\n} from 'redux-starter-kit';\nimport SocketMiddleware from './Middlewares/SocketMiddleware';\nimport rootReducer from 'Reducers'\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [...getDefaultMiddleware(), SocketMiddleware()]\n})\n\nwindow.store = store\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport store from 'Application/Store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);","/* (ignored) */"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAXA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAKA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAXA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AATA;AACA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AAGA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAJA;AAFA;AAWA;AACA;;;AACA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAGA;;;;AAjCA;AACA;AAkCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AAKA;AAQA;AACA;AAKA;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA7DA;AACA;AA+DA;;;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAA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","sourceRoot":""}