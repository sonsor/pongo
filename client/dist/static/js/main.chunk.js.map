{"version":3,"file":"static/js/main.chunk.js","sources":["/home/wasif/projects/pongo/client/src/App.jsx","/home/wasif/projects/pongo/client/src/Components/Connection/index.jsx","/home/wasif/projects/pongo/client/src/Components/Main/index.jsx","/home/wasif/projects/pongo/client/src/Middlewares/SocketMiddleware.js","/home/wasif/projects/pongo/client/src/Reducers/Connection.js","/home/wasif/projects/pongo/client/src/Reducers/index.js","/home/wasif/projects/pongo/client/src/Store.js","/home/wasif/projects/pongo/client/src/index.js","/home/wasif/projects/pongo/client/ignored /home/wasif/projects/pongo/client/node_modules/engine.io-client/lib/transports ws"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n    HashRouter as Router,\n    Route,\n    Switch\n} from \"react-router-dom\";\nimport Main from 'Components/Main';\nimport Connection from 'Components/Connection';\n\nclass App extends Component {\n\n  render() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact component={Main} />\n                <Route path=\"/connect\" exact component={Connection} />\n            </Switch>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport {\n    Row,\n    Col,\n    Button\n} from 'react-bootstrap';\nimport {\n    Dialog,\n    Header,\n    Title,\n    Body,\n    Footer\n} from 'react-bootstrap/Modal';\n\nimport {\n    Group,\n    Label,\n    Control\n} from 'react-bootstrap/Form';\n\nclass Connection extends Component\n{\n    render() {\n        return (\n            <Dialog centered>\n                <Header>\n                    <Title>Connect</Title>\n                </Header>\n                <Body>\n\n                    <Group as={Row}>\n                        <Col sm={3}>\n                            <Label>Host</Label>\n                        </Col>\n                        <Col sm={9}>\n                            <Control name=\"host\" />\n                        </Col>\n                    </Group>\n\n                    <Group as={Row}>\n                        <Col sm={3}>\n                            <Label>User Name</Label>\n                        </Col>\n                        <Col sm={9}>\n                            <Control name=\"username\" />\n                        </Col>\n                    </Group>\n\n                    <Group as={Row}>\n                        <Col sm={3}>\n                            <Label>Password</Label>\n                        </Col>\n                        <Col sm={9}>\n                            <Control name=\"password\" type=\"password\" />\n                        </Col>\n                    </Group>\n\n                    <Group as={Row}>\n                        <Col sm={3}>\n                            <Label>Database Name</Label>\n                        </Col>\n                        <Col sm={9}>\n                            <Control name=\"dbname\" />\n                        </Col>\n                    </Group>\n\n                    <Group as={Row}>\n                        <Col sm={3}>\n                            <Label>Port</Label>\n                        </Col>\n                        <Col sm={9}>\n                            <Control name=\"port\" />\n                        </Col>\n                    </Group>\n                </Body>\n\n                <Footer>\n                    <Button variant=\"primary\">Connect</Button>\n                </Footer>\n            </Dialog>\n        )\n    }\n}\n\nexport default Connection","import React, { Component } from 'react';\n\nclass Main extends Component\n{\n    render() {\n        return (\n            <h1>Main Component</h1>\n        )\n    }\n}\n\nexport default Main","import io from 'socket.io-client';\n\nexport default function SocketMiddleware() {\n    const socket = io();\n\n    return ({ dispatch }) => next => (action) => {\n        if (typeof action === 'function') {\n            return next(action);\n        }\n\n        const {\n            event,\n            leave,\n            handle,\n            ...rest\n        } = action;\n\n        if (!event) {\n            return next(action);\n        }\n\n        if (leave) {\n            socket.removeListener(event);\n        }\n\n        let handleEvent = handle;\n        if (typeof handleEvent === 'string') {\n            handleEvent = result => dispatch({ type: handle, result, ...rest });\n        }\n        return socket.on(event, handleEvent);\n    };\n}","let initState = {\n    host: '',\n    user: '',\n    pass: '',\n    port: '',\n    dbname: ''\n};\n\nexport default function(state = initState, action) {\n    return {...state}\n}","import { combineReducers } from 'redux';\nimport connection from './Connection';\n\nexport default combineReducers({\n    connection: connection\n})","import {\n  configureStore,\n  getDefaultMiddleware\n} from 'redux-starter-kit';\nimport SocketMiddleware from './Middlewares/SocketMiddleware';\nimport rootReducer from 'Reducers'\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [...getDefaultMiddleware(), SocketMiddleware()]\n})\n\nwindow.store = store\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport store from 'Application/Store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);","/* (ignored) */"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AACA;AACA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAXA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AAKA;AAQA;AACA;AAKA;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA7DA;AACA;AA+DA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpFA;AACA;AACA;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AANA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;ACXA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAzBA;AAAA;AA0BA;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AADA;;;;;;;;;;;;;;;;;;ACHA;AAIA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACZA;;;;A","sourceRoot":""}